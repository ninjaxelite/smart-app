[1mdiff --git a/client/app/bahnhof/bahnhof/bahnhof.component.html b/client/app/bahnhof/bahnhof/bahnhof.component.html[m
[1mindex 2a4a7b7..7828e43 100644[m
[1m--- a/client/app/bahnhof/bahnhof/bahnhof.component.html[m
[1m+++ b/client/app/bahnhof/bahnhof/bahnhof.component.html[m
[36m@@ -5,6 +5,13 @@[m
       <h3 class="panel-title">Wien Hauptbahnhof</h3>[m
     </div>[m
     <div class="panel-body">[m
[32m+[m[32m        <span>[m
[32m+[m[32m            <form class="col-lg-12 col-md-6">[m
[32m+[m[32m                <div class="form-group col-lg-4">[m
[32m+[m[32m                    <input type="text" class="form-control" placeholder="Search">[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </form>[m[41m  [m
[32m+[m[32m        </span>[m
       <div class="col-lg-12 col-md-9">[m
         <table *ngIf="bahnhof && rows > 0" class="table table-hover table-responsible">[m
           <tbody>[m
[1mdiff --git a/server/login/login.controller.ts b/server/login/login.controller.ts[m
[1mindex f432665..be91f4d 100644[m
[1m--- a/server/login/login.controller.ts[m
[1m+++ b/server/login/login.controller.ts[m
[36m@@ -11,6 +11,8 @@[m [mexport default class LoginCtrl {[m
     [m
 [m
     login(req, res) {[m
[32m+[m[32m        this.service = new LoginService();[m
[32m+[m[32m        this.service.login(req.params.username, req.params.password);[m
         let user: User = new User('test.user', 'test', 'user', 'ADMIN','123-abc');//this.service.login(req.params.username, req.params.password);[m
         if (user != null) {[m
             res.status(200).json(user);[m
[1mdiff --git a/server/login/login.service.ts b/server/login/login.service.ts[m
[1mindex 2002372..abf8edd 100644[m
[1m--- a/server/login/login.service.ts[m
[1m+++ b/server/login/login.service.ts[m
[36m@@ -1,4 +1,6 @@[m
 import User from '../user/user';[m
[32m+[m[32mimport * as https from 'https';[m
[32m+[m[32mimport * as querystring from 'querystring';[m
 [m
 export default class LoginService {[m
 [m
[36m@@ -7,7 +9,45 @@[m [mexport default class LoginService {[m
 	}[m
     [m
 [m
[32m+[m[32m    public initSmartInAppCockpit() {[m
[32m+[m[32m        let data = JSON.stringify({[m
[32m+[m[32m            application: "SMART",[m
[32m+[m[32m            userName: "org\\f034671",[m
[32m+[m[32m            password: "Password123$"[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        let options = {[m
[32m+[m[32m            headers: {[m
[32m+[m[32m                'Content-Type': 'application/json'[m
[32m+[m[32m            },[m
[32m+[m[32m            host: 'apptest.oebb.at',[m
[32m+[m[32m            path: '/shared/domain/api/auth/basic',[m
[32m+[m[32m            method: 'POST'[m
[32m+[m[32m        };[m
[32m+[m[41m        [m
[32m+[m[32m        let request = https.request(options, function(res){[m
[32m+[m[41m            [m
[32m+[m[32m            let responseString = '';[m
[32m+[m[32m            res.on('data', function(data){[m
[32m+[m[32m                responseString += data;[m
[32m+[m[32m            });[m
[32m+[m
[32m+[m[32m            res.on('end', function(){[m
[32m+[m[32m                console.log(responseString);[m
[32m+[m[32m            });[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        request.write(data);[m
[32m+[m[32m        request.end();[m
[32m+[m
[32m+[m[32m        return new User('test.user', 'test', 'user', 'ADMIN','123-abc');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
     public login(username:String, password: String) {[m
[32m+[m[41m        [m
[32m+[m[32m        this.initSmartInAppCockpit();[m
[32m+[m
         return new User('test.user', 'test', 'user', 'ADMIN','123-abc');[m
     }[m
 }[m
\ No newline at end of file[m
warning: LF will be replaced by CRLF in client/app/bahnhof/bahnhof/bahnhof.component.html.
The file will have its original line endings in your working directory.
